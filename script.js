// const grid = document.getElementById('grid');
// const searchInput = document.getElementById('search');
// const catsWrap = document.getElementById('cats');
// const themeBtn = document.getElementById('theme-btn');
// const body = document.body;
// let PRODUCTS = [];

// // === –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∞–¥–º–∏–Ω–∞ ===
// const ADMIN_IDS = ['1837175511']; // —Å—é–¥–∞ –º–æ–∂–Ω–æ –≤—Å—Ç–∞–≤–∏—Ç—å ID –∞–¥–º–∏–Ω–∞
// const CURRENT_USER_ID = '123456789'; // –¥–ª—è –ø—Ä–∏–º–µ—Ä–∞ —Ç–µ–∫—É—â–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
// const isAdmin = ADMIN_IDS.includes(CURRENT_USER_ID);

// // === –ó–∞–≥—Ä—É–∑–∫–∞ –ø—Ä–æ–¥—É–∫—Ç–æ–≤ –∏–∑ JSON ===
// async function loadProducts() {
//   try {
//     const res = await fetch('products.json?nocache=' + Date.now());
//     if (!res.ok) throw new Error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ JSON');
//     PRODUCTS = await res.json();
//     renderProducts(PRODUCTS);
//   } catch (err) {
//     console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø—Ä–æ–¥—É–∫—Ç–æ–≤:', err);
//     grid.innerHTML = `<p style="color:red;">–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –ø—Ä–æ–¥—É–∫—Ç—ã</p>`;
//   }
// }

// // === –û—Ç—Ä–∏—Å–æ–≤–∫–∞ –ø—Ä–æ–¥—É–∫—Ç–æ–≤ ===
// function renderProducts(items) {
//   grid.innerHTML = '';

//   if (!items || items.length === 0) {
//     grid.innerHTML = '<p style="text-align:center;color:#666;">–ù–µ—Ç —Ç–æ–≤–∞—Ä–æ–≤</p>';
//     return;
//   }

//   items.forEach((p, index) => {
//     // —Å–∫—Ä—ã–≤–∞–µ–º —É–¥–∞–ª–µ–Ω–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã –¥–ª—è –æ–±—ã—á–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
//     if (p.deleted && !isAdmin) return;

//     const card = document.createElement('div');
//     card.className = 'card';
//     card.innerHTML = `
//       <img src="${p.image}" alt="${p.name}">
//       <h3>${p.name}</h3>
//       <p>${p.price} ‚ÇΩ</p>
//       <div class="rating">‚≠ê ${p.rating || '0'}</div>
//       ${isAdmin ? `<button class="admin-btn">${p.deleted ? '–í–µ—Ä–Ω—É—Ç—å' : '–£–¥–∞–ª–∏—Ç—å'}</button>` : ''}
//     `;
//     grid.appendChild(card);

//     if (isAdmin) {
//       const btn = card.querySelector('.admin-btn');
//       btn.addEventListener('click', () => {
//         PRODUCTS[index].deleted = !PRODUCTS[index].deleted;
//         renderProducts(PRODUCTS);
//         // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ localStorage (–∏–ª–∏ –º–æ–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –Ω–∞ —Å–µ—Ä–≤–µ—Ä)
//         localStorage.setItem('products', JSON.stringify(PRODUCTS));
//       });
//     }
//   });
// }

// // === –§–∏–ª—å—Ç—Ä—ã ===
// function applyFilters() {
//   const q = searchInput.value.trim().toLowerCase();
//   const active = document.querySelector('.cat.active');
//   const cat = active ? active.dataset.cat : 'all';

//   let filtered = PRODUCTS;
//   if (cat !== 'all') {
//     filtered = filtered.filter(p => (p.cat || '').toLowerCase() === cat);
//   }
//   if (q) {
//     filtered = filtered.filter(p => (p.name || '').toLowerCase().includes(q));
//   }
//   renderProducts(filtered);
// }

// catsWrap.addEventListener('click', (ev) => {
//   const btn = ev.target.closest('.cat');
//   if (!btn) return;
//   document.querySelectorAll('.cat').forEach(c => c.classList.remove('active'));
//   btn.classList.add('active');
//   applyFilters();
// });

// searchInput.addEventListener('input', applyFilters);

// // === –¢–µ–º–∞ —Å–≤–µ—Ç–ª–∞—è / —Ç—ë–º–Ω–∞—è ===
// if(localStorage.getItem('theme') === 'dark') {
//   body.classList.add('dark');
//   themeBtn.textContent = '‚òÄÔ∏è';
// } else {
//   themeBtn.textContent = 'üåô';
// }

// themeBtn.addEventListener('click', () => {
//   body.classList.toggle('dark');
//   if(body.classList.contains('dark')) {
//     themeBtn.textContent = '‚òÄÔ∏è';
//     localStorage.setItem('theme', 'dark');
//   } else {
//     themeBtn.textContent = 'üåô';
//     localStorage.setItem('theme', 'light');
//   }
// });

// // === –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è ===
// loadProducts();



const grid = document.getElementById('grid');
const searchInput = document.getElementById('search');
const catsWrap = document.getElementById('cats');
const themeBtn = document.getElementById('theme-btn');
const body = document.body;

let PRODUCTS = [];
let ADMIN_IDS = [];
let isAdmin = false;
let currentUserId = null;

// --- –ü–æ–ª—É—á–∞–µ–º ID —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ Telegram WebApp ---
if (window.Telegram?.WebApp?.initDataUnsafe?.user?.id) {
  currentUserId = window.Telegram.WebApp.initDataUnsafe.user.id.toString();
  console.log('currentUserId (—Ç–∏–ø: ' + typeof currentUserId + '):', currentUserId);
} else {
  console.log('–ù–µ –≤ Telegram WebApp, —Ç–µ–∫—É—â–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å—á–∏—Ç–∞–µ—Ç—Å—è –æ–±—ã—á–Ω—ã–º.');
}

// --- –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–ø–∏—Å–æ–∫ –∞–¥–º–∏–Ω–æ–≤ ---
async function loadAdmins() {
  try {
    const res = await fetch('admins.json?nocache=' + Date.now());
    if (!res.ok) throw new Error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ admins.json');

    // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –≤—Å–µ ID –≤ —Å—Ç—Ä–æ–∫–∏ –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ —Å—Ä–∞–≤–Ω–µ–Ω–∏—è
    ADMIN_IDS = (await res.json()).map(id => id.toString());

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Ç–µ–∫—É—â–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω–æ–º
    if (currentUserId && ADMIN_IDS.includes(currentUserId)) {
      isAdmin = true;
    } else {
      isAdmin = false;
    }

    console.log('ADMIN_IDS:', ADMIN_IDS);
    console.log('isAdmin –ø–æ—Å–ª–µ –ø—Ä–æ–≤–µ—Ä–∫–∏:', isAdmin);
  } catch (err) {
    console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∞–¥–º–∏–Ω–æ–≤:', err);
  }
}

// --- –ó–∞–≥—Ä—É–∂–∞–µ–º –ø—Ä–æ–¥—É–∫—Ç—ã ---
async function loadProducts() {
  try {
    const saved = localStorage.getItem('products');
    if (saved) {
      PRODUCTS = JSON.parse(saved);
    } else {
      const res = await fetch('products.json?nocache=' + Date.now());
      if (!res.ok) throw new Error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ products.json');
      PRODUCTS = await res.json();
    }
    renderProducts(PRODUCTS);
  } catch (err) {
    console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø—Ä–æ–¥—É–∫—Ç–æ–≤:', err);
    grid.innerHTML = `<p style="color:red;">–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –ø—Ä–æ–¥—É–∫—Ç—ã</p>`;
  }
}

// --- –û—Ç—Ä–∏—Å–æ–≤–∫–∞ –ø—Ä–æ–¥—É–∫—Ç–æ–≤ ---
function renderProducts(items) {
  grid.innerHTML = '';

  if (!items || items.length === 0) {
    grid.innerHTML = '<p style="text-align:center;color:#666;">–ù–µ—Ç —Ç–æ–≤–∞—Ä–æ–≤</p>';
    return;
  }

  items.forEach((p, index) => {
    // –°–∫—Ä—ã–≤–∞–µ–º —É–¥–∞–ª—ë–Ω–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã –¥–ª—è –æ–±—ã—á–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    if (p.deleted && !isAdmin) return;

    const card = document.createElement('div');
    card.className = 'card';
    card.innerHTML = `
      <img src="${p.image}" alt="${p.name}" width="100%">
      <h3>${p.name}</h3>
      <p>${p.price} ‚ÇΩ</p>
      <div class="rating">‚≠ê ${p.rating || '0'}</div>
    `;

    // --- –ö–Ω–æ–ø–∫–∞ —Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–æ–≤ ---
    if (isAdmin) {
      const btn = document.createElement('button');
      btn.className = p.deleted ? 'admin-btn restore' : 'admin-btn delete';
      btn.textContent = p.deleted ? '–í–µ—Ä–Ω—É—Ç—å' : '–£–¥–∞–ª–∏—Ç—å';
      btn.addEventListener('click', () => {
        PRODUCTS[index].deleted = !PRODUCTS[index].deleted;
        localStorage.setItem('products', JSON.stringify(PRODUCTS));
        renderProducts(PRODUCTS);
      });
      card.appendChild(btn);
    }

    grid.appendChild(card);
  });
}

// --- –§–∏–ª—å—Ç—Ä—ã ---
function applyFilters() {
  const q = searchInput.value.trim().toLowerCase();
  const active = document.querySelector('.cat.active');
  const cat = active ? active.dataset.cat : 'all';

  let filtered = PRODUCTS;
  if (cat !== 'all') filtered = filtered.filter(p => (p.cat || '').toLowerCase() === cat);
  if (q) filtered = filtered.filter(p => (p.name || '').toLowerCase().includes(q));

  renderProducts(filtered);
}

// --- –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ ---
catsWrap.addEventListener('click', (ev) => {
  const btn = ev.target.closest('.cat');
  if (!btn) return;
  document.querySelectorAll('.cat').forEach(c => c.classList.remove('active'));
  btn.classList.add('active');
  applyFilters();
});

searchInput.addEventListener('input', applyFilters);

// --- –¢–µ–º–∞ ---
if(localStorage.getItem('theme') === 'dark') {
  body.classList.add('dark');
  themeBtn.textContent = '‚òÄÔ∏è';
} else {
  themeBtn.textContent = 'üåô';
}

themeBtn.addEventListener('click', () => {
  body.classList.toggle('dark');
  if(body.classList.contains('dark')) {
    themeBtn.textContent = '‚òÄÔ∏è';
    localStorage.setItem('theme', 'dark');
  } else {
    themeBtn.textContent = 'üåô';
    localStorage.setItem('theme', 'light');
  }
});

// --- –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è ---
async function init() {
  await loadAdmins();
  await loadProducts();
}

init();



